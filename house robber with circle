class Solution {
    public int rob(int[] nums) {

        if(nums.length==1){
            return nums[0];
        }

        int[] arr1=new int[nums.length-1];
        int[] arr2=new int[nums.length-1];
        for(int i=0;i<nums.length-1;i++){
            arr1[i]=nums[i];
            arr2[i]=nums[i+1];
        }
        int ans1=helper(arr1,arr1.length);
        int ans2=helper(arr2,arr2.length);
        return Math.max(ans1,ans2);
        
    }
     static int helper(int[] arr,int n){
          if(n==1){
            return arr[0];
        }
        int[] dp=new int[n];
        dp[0]=arr[0];
        dp[1]=Math.max(arr[0],arr[1]);
        for(int i=2;i<=n-1;i++){
            dp[i]=Math.max(dp[i-2]+arr[i],dp[i-1]);
        }
        return dp[n-1];
    }
}
